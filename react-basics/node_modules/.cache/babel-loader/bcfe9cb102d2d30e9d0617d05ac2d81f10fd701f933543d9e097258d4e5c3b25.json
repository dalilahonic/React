{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalila\\\\Desktop\\\\React\\\\new-new\\\\src\\\\app.js\";\n// import { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\n\n// export default function App() {\n//   const [activeIndex, setIndex] = useState(0);\n//   const [count, setCount] = useState(0);\n//   const [heading, setHeading] = useState(\n//     'this is a heading'\n//   );\n\n//   function handleClick() {\n//     setHeading('this is a new heading');\n//     setIndex(activeIndex === 0 ? 1 : 0);\n//   }\n\n//   return (\n//     <div>\n//       <h1\n//         className={activeIndex === 0 ? 'red' : 'blue'}\n//         onClick={() => handleClick()}\n//       >\n//         {heading}\n//       </h1>\n\n//       <button onClick={() => setCount(count + 1)}>\n//         Plus 1\n//       </button>\n//       <button onClick={() => setCount(count - 1)}>\n//         Minus 1\n//       </button>\n//       <p>{count}</p>\n//     </div>\n//   );\n// }\n\n// components - reausable building blocks in user interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const nums = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: 2 + 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: 99 - 97\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // your custom components must start with an upper case character. lower case elements are built in html elements.\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","jsxDEV","_jsxDEV","Fragment","_Fragment","App","nums","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dalila/Desktop/React/new-new/src/app.js"],"sourcesContent":["// import { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\n\n// export default function App() {\n//   const [activeIndex, setIndex] = useState(0);\n//   const [count, setCount] = useState(0);\n//   const [heading, setHeading] = useState(\n//     'this is a heading'\n//   );\n\n//   function handleClick() {\n//     setHeading('this is a new heading');\n//     setIndex(activeIndex === 0 ? 1 : 0);\n//   }\n\n//   return (\n//     <div>\n//       <h1\n//         className={activeIndex === 0 ? 'red' : 'blue'}\n//         onClick={() => handleClick()}\n//       >\n//         {heading}\n//       </h1>\n\n//       <button onClick={() => setCount(count + 1)}>\n//         Plus 1\n//       </button>\n//       <button onClick={() => setCount(count - 1)}>\n//         Minus 1\n//       </button>\n//       <p>{count}</p>\n//     </div>\n//   );\n// }\n\n// components - reausable building blocks in user interface\n\nexport default function App() {\n\n  const nums = {\n    \n  }\n  return (\n    <>\n      <ExpenseItem title={2 + 3}></ExpenseItem>;\n      <ExpenseItem title={99 - 97}></ExpenseItem>\n    </>\n  );\n  // your custom components must start with an upper case character. lower case elements are built in html elements.\n}\n"],"mappings":";AAAA;AACA,OAAOA,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,MAAMC,IAAI,GAAG,CAEb,CAAC;EACD,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAACF,WAAW;MAACQ,KAAK,EAAE,CAAC,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,KACzC,eAAAV,OAAA,CAACF,WAAW;MAACQ,KAAK,EAAE,EAAE,GAAG;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA,eAC3C,CAAC;EAEL;AACF;AAACC,EAAA,GAZuBR,GAAG;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}