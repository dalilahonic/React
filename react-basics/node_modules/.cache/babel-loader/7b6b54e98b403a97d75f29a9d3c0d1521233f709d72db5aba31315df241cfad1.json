{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalila\\\\Desktop\\\\React\\\\tic-tac-toe\\\\src\\\\app.js\";\nimport { useState } from 'react';\n\n// function Square({ value }) {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square() {\n  c;\n  function handleClick() {\n    console.log('clicked');\n  }\n  return (\n    /*#__PURE__*/\n    // <button className=\"square\" onClick={handleClick}>\n    //   {value}\n    // </button>\n    _jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = Square;\nexport default function Board() {\n  return (\n    /*#__PURE__*/\n    //  we use fragments (<> and </>) to wrap multiple adjacent JSX elements like this:\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [/*#__PURE__*/_jsxDEV(Square, {\n            value: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [/*#__PURE__*/_jsxDEV(Square, {\n            value: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [/*#__PURE__*/_jsxDEV(Square, {\n            value: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Square, {\n            value: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","c","handleClick","console","log","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","children","value","_c2","$RefreshReg$"],"sources":["C:/Users/Dalila/Desktop/React/tic-tac-toe/src/app.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n// function Square({ value }) {\r\nfunction Square() {\r\n  c\r\n  function handleClick() {\r\n    console.log('clicked');\r\n  }\r\n  return (\r\n    // <button className=\"square\" onClick={handleClick}>\r\n    //   {value}\r\n    // </button>\r\n    <button\r\n      className=\"square\"\r\n      onClick={handleClick}\r\n    ></button>\r\n  );\r\n}\r\n\r\nexport default function Board() {\r\n  return (\r\n    //  we use fragments (<> and </>) to wrap multiple adjacent JSX elements like this:\r\n    <>\r\n      <div className=\"board\">\r\n        <div className=\"board-row\">\r\n          <Square value=\"1\" />\r\n          <Square value=\"2\" />\r\n          <Square value=\"3\" />\r\n        </div>\r\n        <div className=\"board-row\">\r\n          <Square value=\"4\" />\r\n          <Square value=\"5\" />\r\n          <Square value=\"6\" />\r\n        </div>\r\n        <div className=\"board-row\">\r\n          <Square value=\"7\" />\r\n          <Square value=\"8\" />\r\n          <Square value=\"9\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,MAAMA,CAAA,EAAG;EAChBC,CAAC;EACD,SAASC,WAAWA,CAAA,EAAG;IACrBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB;EACA;IAAA;IACE;IACA;IACA;IACAP,OAAA;MACEQ,SAAS,EAAC,QAAQ;MAClBC,OAAO,EAAEJ;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;AAEd;AAACC,EAAA,GAdQX,MAAM;AAgBf,eAAe,SAASY,KAAKA,CAAA,EAAG;EAC9B;IAAA;IACE;IACAf,OAAA,CAAAE,SAAA;MAAAc,QAAA,eACEhB,OAAA;QAAKQ,SAAS,EAAC,OAAO;QAAAQ,QAAA,gBACpBhB,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAQ,QAAA,gBACxBhB,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNb,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAQ,QAAA,gBACxBhB,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNb,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAQ,QAAA,gBACxBhB,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBb,OAAA,CAACG,MAAM;YAACc,KAAK,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,gBACN;EAAC;AAEP;AAACK,GAAA,GAvBuBH,KAAK;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}