{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalila\\\\Desktop\\\\React\\\\react-basics\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\nimport ExpenseItem from './components/ExpenseItem';\nimport Card from './components/Card';\nimport NewExpense from './components/newExpense/NewExpense';\nimport { useState } from 'react';\nimport ExpensesFilter from './components/ExpensesFilter';\n\n// export default function App() {\n//   const [activeIndex, setIndex] = useState(0);\n//   const [count, setCount] = useState(0);\n//   const [heading, setHeading] = useState(\n//     'this is a heading'\n//   );\n\n//   function handleClick() {\n//     setHeading('this is a new heading');\n//     setIndex(activeIndex === 0 ? 1 : 0);\n//   }\n\n//   return (\n//     <div>\n//       <h1\n//         className={activeIndex === 0 ? 'red' : 'blue'}\n//         onClick={() => handleClick()}\n//       >\n//         {heading}\n//       </h1>\n\n//       <button onClick={() => setCount(count + 1)}>\n//         Plus 1\n//       </button>\n//       <button onClick={() => setCount(count - 1)}>\n//         Minus 1\n//       </button>\n//       <p>{count}</p>\n//     </div>\n//   );\n// }\n\n// components - reausable building blocks in user interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nexport default function App(props) {\n  _s();\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // const nums = [12, 43, 63, 19];\n\n  function addExpenseHandler(expense) {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  }\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: filterChangeHandler,\n      selected: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"parentContainer\",\n      children: expensesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // your custom components must start with an upper case character. lower case elements are built in html elements.\n}\n\n// 05\n_s(App, \"TvjGjAdwTQlJUunnSlxz/L/4EGY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","Card","NewExpense","useState","ExpensesFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","DUMMY_EXPENSES","id","title","amount","date","Date","App","props","_s","expenses","setExpenses","addExpenseHandler","expense","prevExpenses","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","filter","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onAddExpense","onChangeFilter","selected","className","_c","$RefreshReg$"],"sources":["C:/Users/Dalila/Desktop/React/react-basics/src/app.js"],"sourcesContent":["// import { useState } from 'react';\nimport ExpenseItem from './components/ExpenseItem';\nimport Card from './components/Card';\nimport NewExpense from './components/newExpense/NewExpense';\n\nimport { useState } from 'react';\nimport ExpensesFilter from './components/ExpensesFilter';\n\n// export default function App() {\n//   const [activeIndex, setIndex] = useState(0);\n//   const [count, setCount] = useState(0);\n//   const [heading, setHeading] = useState(\n//     'this is a heading'\n//   );\n\n//   function handleClick() {\n//     setHeading('this is a new heading');\n//     setIndex(activeIndex === 0 ? 1 : 0);\n//   }\n\n//   return (\n//     <div>\n//       <h1\n//         className={activeIndex === 0 ? 'red' : 'blue'}\n//         onClick={() => handleClick()}\n//       >\n//         {heading}\n//       </h1>\n\n//       <button onClick={() => setCount(count + 1)}>\n//         Plus 1\n//       </button>\n//       <button onClick={() => setCount(count - 1)}>\n//         Minus 1\n//       </button>\n//       <p>{count}</p>\n//     </div>\n//   );\n// }\n\n// components - reausable building blocks in user interface\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default function App(props) {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // const nums = [12, 43, 63, 19];\n\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return (\n      expense.date.getFullYear().toString() === filteredYear\n    );\n  });\n\n  let expensesContent = <p>No expenses found</p>;\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpensesFilter\n        onChangeFilter={filterChangeHandler}\n        selected={filteredYear}\n      />\n      <Card className='parentContainer'>\n        \n        {/* {filteredExpenses.length === 0 ? (\n          <p>No expenses found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n        )} */}\n\n        {/* {filteredExpenses.length === 0 && (\n          <p>No expenses found</p>\n        )}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))} */}\n\n        {/* <ExpenseItem\n          paragraph1='Dalila'\n          paragraph2='Honic'\n          title={2 + 3}\n        ></ExpenseItem>\n        <ExpenseItem title={99 - 97}></ExpenseItem>\n        <ExpenseItem title={nums[1]}></ExpenseItem>\n        <ExpenseItem title='insurance'></ExpenseItem> */}\n\n        {/* {expenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            // key is a prop you can add to any component and we use it to keep trak of identity of each element in the list\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            paragraph1='Dalila'\n            paragraph2='Honic'\n          />\n        ))} */}\n        {expensesContent}\n      </Card>\n    </>\n  );\n  // your custom components must start with an upper case character. lower case elements are built in html elements.\n}\n\n// 05\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}